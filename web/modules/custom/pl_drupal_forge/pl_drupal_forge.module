<?php

/**
 * @file
 * Primary module hooks for pl_drupal_forge module.
 */

use Drupal\user\Entity\Role;

/**
 * <strong>
 *   <em> Implements hook_help().
 * </em>
 */
function pl_drupal_forge_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.pl_drupal_forge':
      return '<p>' . t('PL Drupal Forge help message placeholder') . '</p>';
  }
}

/**
 * <strong>
 *   <em> Implements hook_theme().
 * </em>
 */
function pl_drupal_forge_theme($existing, $type, $theme, $path) {
  return [
    'start_page_template' => [
      'variables' => [
        'show_url' => null,
        'start_test_form' => null,
        'base_url' => null,
        'tags' => [],
      ],
    ],
    'report_page_template' => [
      'variables' => [
        'report' => null,
      ],
    ],
  ];
}

/**
 * Implements hook_install().
 *
 * Due to weird order of Drupal module initialization, we can't
 * use module's config in the service constructor, so initialize it here.
 *
 * @return void
 */
function pl_drupal_forge_install() {
  // Ensure config is installed.
  \Drupal::service('config.installer')->installDefaultConfig('module', 'pl_drupal_forge');

  // Get the config factory service.
  $config_factory = \Drupal::configFactory();

   // Update system.site configuration (e.g., default front page).
   $system_site_config = $config_factory->getEditable('system.site');
   $system_site_config
     ->set('page.front', '/home')
     ->save();

  // Init ATK (AWS) client.
  \Drupal::service('pl_drupal_forge.atk_client')->init();

  $role = Role::load('anonymous');
  if ($role) {
    $role->grantPermission('restful get pl_drupal_forge_logs');
    $role->grantPermission('restful post pl_drupal_forge_invoke');
    $role->save();

    \Drupal::logger('pl_drupal_forge')->notice('' .
      'Permission granted to anonymous users.
      Enjoy your AWS and Azure bills ðŸ¤ª');
  }
}
